{"version":3,"sources":["../../src/config/jwt.js"],"names":["deps","objReturn","encode","bind","decodeJWT","hydrateUser","unless","secret","credentialsRequired","data","sign","req","res","next","User","user","unauthorized","_id","role","_doc","findOneById","then","e"],"mappings":";;;;;;kBAoCe,UAAUA,IAAV,EAAgB;AAC7B,MAAMC,YAAY;AAChBC,YAAQA,OAAOC,IAAP,CAAY,IAAZ,EAAkBH,IAAlB,CADQ;AAEhBI,eAAWA,UAAUJ,IAAV,CAFK;AAGhBK,iBAAaA,YAAYF,IAAZ,CAAiB,IAAjB,EAAuBH,IAAvB;AAHG,GAAlB;AAKAC,YAAUI,WAAV,CAAsBC,MAAtB;AACA,SAAOL,SAAP;AACD,C;;AA5CD;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMG,YAAY,SAAZA,SAAY;AAAA,MAAGG,MAAH,QAAGA,MAAH;AAAA,SAAgB,0BAAW,EAAEA,cAAF,EAAUC,qBAAqB,KAA/B,EAAX,CAAhB;AAAA,CAAlB;;AAEAJ,UAAUE,MAAV;;AAEA,SAASJ,MAAT,QAA4BO,IAA5B,EAAkC;AAAA,MAAhBF,MAAgB,SAAhBA,MAAgB;;AAChC,SAAO,uBAAIG,IAAJ,CAASD,IAAT,EAAeF,MAAf,CAAP;AACD;;AAED,SAASF,WAAT,QAA+BM,GAA/B,EAAoCC,GAApC,EAAyCC,IAAzC,EAA+C;AAAA,MAAxBC,IAAwB,SAAxBA,IAAwB;;AAC7C,MAAI;AACF,QAAI,CAACH,IAAII,IAAT,EAAe;AACb,YAAM,eAAKC,YAAL,CAAkB,oCAAlB,CAAN;AACD;;AAHC,gBAIcL,IAAII,IAAJ,CAASE,GAAT,IAAgBN,IAAII,IAAJ,CAASG,IAAzB,GAAgCP,IAAII,IAApC,GAA2CJ,IAAII,IAAJ,CAASI,IAJlE;AAAA,QAIMF,GAJN,SAIMA,GAJN;;AAMFH,SAAKM,WAAL,CAAiBH,GAAjB,EACCI,IADD,CACM,UAACN,IAAD,EAAU;AACdJ,UAAII,IAAJ,GAAWA,IAAX;;AAEA,UAAIJ,IAAII,IAAR,EAAc;AACZF;AACD,OAFD,MAEO;AACL,cAAM,eAAKG,YAAL,CAAkB,eAAlB,CAAN;AACD;AACF,KATD;AAUD,GAhBD,CAgBE,OAAOM,CAAP,EAAU;AACVT,SAAKS,CAAL;AACD;AACF","file":"jwt.js","sourcesContent":["import jwt from 'jsonwebtoken';\nimport expressjwt from 'express-jwt';\nimport unless from 'express-unless';\nimport boom from 'boom';\n\nconst decodeJWT = ({ secret }) => expressjwt({ secret, credentialsRequired: false });\n\ndecodeJWT.unless = unless;\n\nfunction encode({ secret }, data) {\n  return jwt.sign(data, secret);\n}\n\nfunction hydrateUser({ User }, req, res, next) {\n  try {\n    if (!req.user) {\n      throw boom.unauthorized('Token is either missing or invalid');\n    }\n    const { _id } = req.user._id && req.user.role ? req.user : req.user._doc;\n\n    User.findOneById(_id)\n    .then((user) => {\n      req.user = user;\n\n      if (req.user) {\n        next();\n      } else {\n        throw boom.unauthorized('Invalid token');\n      }\n    });\n  } catch (e) {\n    next(e);\n  }\n}\n\n\nexport default function (deps) {\n  const objReturn = {\n    encode: encode.bind(null, deps),\n    decodeJWT: decodeJWT(deps),\n    hydrateUser: hydrateUser.bind(null, deps)\n  };\n  objReturn.hydrateUser.unless = unless;\n  return objReturn;\n}\n"]}