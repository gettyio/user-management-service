{"version":3,"sources":["../../src/config/passport.js"],"names":["deps","localLogin","localSignup","User","jwt","use","usernameField","passwordField","passReqToCallback","req","username","password","done","validateUserNamePassword","then","authorization","encode","user","toJSON","catch","message","e","email","save","body","err"],"mappings":";;;;;;kBAmCe,UAAUA,IAAV,EAAgB;AAC7BC,aAAWD,IAAX;AACAE,cAAYF,IAAZ;AACA;AACD,C;;AAvCD;;;;AACA;;;;AAEA,SAASC,UAAT,OAAmC;AAAA,MAAbE,IAAa,QAAbA,IAAa;AAAA,MAAPC,GAAO,QAAPA,GAAO;;AACjC,qBAASC,GAAT,CAAa,aAAb,EAA4B,4BAC1B,EAAEC,eAAe,UAAjB,EAA6BC,eAAe,UAA5C,EAAwDC,mBAAmB,IAA3E,EAD0B,EAE1B,UAACC,GAAD,EAAMC,QAAN,EAAgBC,QAAhB,EAA0BC,IAA1B,EAAmC;AACjCT,SAAKU,wBAAL,CAA8BH,QAA9B,EAAwCC,QAAxC,EACCG,IADD,CACM;AAAA,aACJF,KACI,IADJ,EAEI,EAAEG,2BAAyBX,IAAIY,MAAJ,CAAWC,KAAKC,MAAL,EAAX,CAA3B,EAAwDD,UAAxD,EAFJ,CADI;AAAA,KADN,EAOCE,KAPD,CAOO;AAAA,aAAKP,KAAK,EAAEQ,SAASC,EAAED,OAAb,EAAL,CAAL;AAAA,KAPP;AAQD,GAXyB,CAA5B;AAaD;;AAED,SAASlB,WAAT,QAAoC;AAAA,MAAbC,IAAa,SAAbA,IAAa;AAAA,MAAPC,GAAO,SAAPA,GAAO;;AAClC,qBAASC,GAAT,CAAa,cAAb,EAA6B,4BAC3B,EAAEC,eAAe,OAAjB,EAA0BC,eAAe,UAAzC,EAAqDC,mBAAmB,IAAxE,EAD2B,EAE3B,UAACC,GAAD,EAAMa,KAAN,EAAaX,QAAb,EAAuBC,IAAvB,EAAgC;AAC9B,WAAOT,KAAKoB,IAAL,CAAUd,IAAIe,IAAd,EACNV,IADM,CACD;AAAA,aACJF,KACE,IADF,EAEE,EAAEG,2BAAyBX,IAAIY,MAAJ,CAAWC,IAAX,CAA3B,EAA+CA,UAA/C,EAFF,CADI;AAAA,KADC,EAONE,KAPM,CAOA;AAAA,aAAOP,KAAK,EAAEQ,SAASK,IAAIL,OAAf,EAAL,CAAP;AAAA,KAPA,CAAP;AAQD,GAX0B,CAA7B;AAaD","file":"passport.js","sourcesContent":["import passport from 'passport';\nimport { Strategy as LocalStrategy } from 'passport-local';\n\nfunction localLogin({ User, jwt }) {\n  passport.use('local-login', new LocalStrategy(\n    { usernameField: 'username', passwordField: 'password', passReqToCallback: true },\n    (req, username, password, done) => {\n      User.validateUserNamePassword(username, password)\n      .then(user =>\n        done(\n            null,\n            { authorization: `Bearer ${jwt.encode(user.toJSON())}`, user }\n        )\n      )\n      .catch(e => done({ message: e.message }));\n    }\n  ));\n}\n\nfunction localSignup({ User, jwt }) {\n  passport.use('local-signup', new LocalStrategy(\n    { usernameField: 'email', passwordField: 'password', passReqToCallback: true },\n    (req, email, password, done) => {\n      return User.save(req.body)\n      .then(user =>\n        done(\n          null,\n          { authorization: `Bearer ${jwt.encode(user)}`, user }\n        )\n      )\n      .catch(err => done({ message: err.message }));\n    }\n  ));\n}\n\nexport default function (deps) {\n  localLogin(deps);\n  localSignup(deps);\n  return passport;\n}\n"]}