{"version":3,"sources":["../../src/services/user.js"],"names":["deps","router","post","loginSchema","login","bind","signupSchema","signup","body","username","string","required","password","min","email","minDomainAtoms","req","res","next","passport","authenticate","session","err","user","status","json","e"],"mappings":";;;;;;kBA+Ce,UAAUA,IAAV,EAAgB;AAC7BC,SAAOC,IAAP,CAAY,QAAZ,EAAsB,iCAASC,WAAT,CAAtB,EAA6CC,MAAMC,IAAN,CAAW,IAAX,EAAiBL,IAAjB,CAA7C;AACAC,SAAOC,IAAP,CAAY,SAAZ,EAAuB,iCAASI,YAAT,CAAvB,EAA+CC,OAAOF,IAAP,CAAY,IAAZ,EAAkBL,IAAlB,CAA/C;AACA,SAAOC,MAAP;AACD,C;;AAnDD;;AACA;;;;AACA;;;;;;AAEA,IAAMA,SAAS,qBAAf;;AAEA,IAAME,cAAc;AAClBK,QAAM;AACJC,cAAU,cAAIC,MAAJ,GAAaC,QAAb,EADN;AAEJC,cAAU,cAAIF,MAAJ,GAAaG,GAAb,CAAiB,CAAjB,EAAoBF,QAApB;AAFN;AADY,CAApB;;AAOA,IAAML,eAAe;AACnBE,QAAM;AACJM,WAAO,cAAIJ,MAAJ,GAAaI,KAAb,CAAmB,EAAEC,gBAAgB,CAAlB,EAAnB,EAA0CJ,QAA1C,EADH;AAEJF,cAAU,cAAIC,MAAJ,GAAaC,QAAb,EAFN;AAGJC,cAAU,cAAIF,MAAJ,GAAaG,GAAb,CAAiB,CAAjB,EAAoBF,QAApB;AAHN;AADa,CAArB;;AAQA,SAASP,KAAT,OAA6BY,GAA7B,EAAkCC,GAAlC,EAAuCC,IAAvC,EAA6C;AAAA,MAA5BC,QAA4B,QAA5BA,QAA4B;;AAC3C,SAAOA,SAASC,YAAT,CAAsB,aAAtB,EAAqC,EAAEC,SAAS,KAAX,EAArC,EACL,UAACC,GAAD,EAAMC,IAAN,EAAe;AACb,QAAID,GAAJ,EAAS;AACPL,UAAIO,MAAJ,CAAWF,IAAIE,MAAJ,IAAc,GAAzB,EAA8BC,IAA9B,CAAmCH,GAAnC;AACD;AACDL,QAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,IAArB;AACD,GANI,EAOLP,GAPK,EAOAC,GAPA,EAOKC,IAPL,CAAP;AAQD;;AAED,SAASX,MAAT,QAA8BS,GAA9B,EAAmCC,GAAnC,EAAwCC,IAAxC,EAA8C;AAAA,MAA5BC,QAA4B,SAA5BA,QAA4B;;AAC5C,SAAOA,SAASC,YAAT,CAAsB,cAAtB,EAAsC,EAAEC,SAAS,KAAX,EAAtC,EACL,UAACC,GAAD,EAAMC,IAAN,EAAe;AACb,QAAID,GAAJ,EAAS;AACPL,UAAIO,MAAJ,CAAWF,IAAIE,MAAJ,IAAc,GAAzB,EAA8BC,IAA9B,CAAmCH,GAAnC;AACD;AACD,QAAI;AACFL,UAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,IAArB;AACD,KAFD,CAEE,OAAOG,CAAP,EAAU;AACVT,UAAIO,MAAJ,CAAWE,EAAEF,MAAF,IAAY,GAAvB,EAA4BC,IAA5B,CAAiCC,CAAjC;AACD;AACF,GAVI,EAWLV,GAXK,EAWAC,GAXA,EAWKC,IAXL,CAAP;AAYD","file":"user.js","sourcesContent":["import { Router } from 'express';\nimport Joi from 'joi';\nimport validate from 'express-validation';\n\nconst router = new Router();\n\nconst loginSchema = {\n  body: {\n    username: Joi.string().required(),\n    password: Joi.string().min(6).required()\n  }\n};\n\nconst signupSchema = {\n  body: {\n    email: Joi.string().email({ minDomainAtoms: 2 }).required(),\n    username: Joi.string().required(),\n    password: Joi.string().min(6).required()\n  }\n};\n\nfunction login({ passport }, req, res, next) {\n  return passport.authenticate('local-login', { session: false },\n    (err, user) => {\n      if (err) {\n        res.status(err.status || 400).json(err);\n      }\n      res.status(200).json(user);\n    }\n  )(req, res, next);\n}\n\nfunction signup({ passport }, req, res, next) {\n  return passport.authenticate('local-signup', { session: false },\n    (err, user) => {\n      if (err) {\n        res.status(err.status || 400).json(err);\n      }\n      try {\n        res.status(201).json(user);\n      } catch (e) {\n        res.status(e.status || 400).json(e);\n      }\n    }\n  )(req, res, next);\n}\n\nexport default function (deps) {\n  router.post('/login', validate(loginSchema), login.bind(null, deps));\n  router.post('/signup', validate(signupSchema), signup.bind(null, deps));\n  return router;\n}\n"]}